name: ISO15693 Firmware Build (master Branch Push, Pre-release with Artifacts)

on:
  push:
    branches: [ master ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Make a firmware build folder
      run: mkdir FirmwareBuild
    - name: Print Kernel Ver
      run: uname -a
    - name: Update APT
      run: sudo apt-get update -yqq
    - name: Install AVR GCC Suite
      run: sudo apt-get install -yqq make autoconf build-essential ca-certificates pkg-config libreadline-dev gcc-avr binutils-avr gdb-avr avr-libc avrdude
    - name: Make ISO15693 Firmware
      run: make iso15693
      working-directory: Firmware/Chameleon-Mini/
    - name: Move hex file to FirmwareBuild
      run: mv  Chameleon-Mini-CustomBuild_ISO15693.hex $GITHUB_WORKSPACE/FirmwareBuild/
      working-directory: Firmware/Chameleon-Mini/
    - name: Move eep file to FirmwareBuild
      run: mv  Chameleon-Mini-CustomBuild_ISO15693.eep $GITHUB_WORKSPACE/FirmwareBuild/
      working-directory: Firmware/Chameleon-Mini/
    - name: Upload Build Artifact to Action
      uses: actions/upload-artifact@v2.1.4
      with:
        name: "ChameleonBuild"
        path: "FirmwareBuild/**"
    - name: Create a Pre-release
      uses: actions/create-release@v1.1.3
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: "${{ format('Build-ISO15693-{0}', github.sha) }}"
        release_name: ISO15693-only Firmware Build ${{ github.sha }}
        body: Built ISO15693 at commit ${{ github.sha }} from ${{ github.actor }}
        draft: false
        prerelease: true
    - name: Upload Pre-release Artifacts
      uses: linuxgemini/github-upload-release-artifacts-action@master
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        created_tag: "${{ format('Build-ISO15693-{0}', github.sha) }}"
        args: "FirmwareBuild/"
